{"version":3,"sources":["components/Logo/pug_logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Rank/Rank.js","components/Title/Title.js","components/PugRecognition/PugRecognition.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","onClick","className","Logo","options","max","style","height","width","alt","id","src","pug_logo","ImageLinkForm","onInputChange","onKeyPress","onButtonSubmit","type","onChange","SignIn","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","console","log","signInFailed","props","loadUser","catch","err","keyPressed","key","this","htmlFor","name","React","Component","Register","onNameChange","registerFailed","Rank","entries","Title","PugRecognition","imageUrl","boxes","isPug","isThinking","boxList","length","map","box","i","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","pugResult","faceResult","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFaces","outputs","regions","returnBoxes","region","clarifaiFace","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","concepts","results","c","count","Object","assign","params","particleOptions","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b8b180b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pug_logo.55b333b4.png\";","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n\tif (isSignedIn) {\r\n\t\treturn (\r\n\t\t\t<nav>\r\n\t\t\t\t<p \r\n\t\t\t\t\tonClick={() => onRouteChange('signin')}\r\n\t\t\t\t\tclassName='f3 link dim underline pa3 pointer'\r\n\t\t\t\t>Sign Out</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<nav>\r\n\t\t\t\t<p \r\n\t\t\t\t\tonClick={() => onRouteChange('signin')}\r\n\t\t\t\t\tclassName='f3 link dim underline pa3 pointer mv1 reduce'\r\n\t\t\t\t>Sign In</p>\r\n\t\t\t\t<p \r\n\t\t\t\t\tonClick={() => onRouteChange('register')}\r\n\t\t\t\t\tclassName='f3 link dim underline pa3 pointer mv1 reduce'\r\n\t\t\t\t>Register</p>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport pug_logo from './pug_logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n\treturn (\r\n\t\t<div className='ma2 mt0 pa2'>\r\n\t\t\t<Tilt className=\"Tilt br3 shadow-2\" options={{ max : 55 }} style={{ height: 125, width: 125 }} >\r\n\t\t\t\t<div className=\"Tilt-inner pa3\">\r\n\t\t\t\t\t<img alt='logo' id='logo' src={pug_logo} />\r\n\t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onKeyPress, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div className=' mt0 w-100'>\r\n\t\t\t<p className='f4'>\r\n\t\t\t\t{'This essential app sniffs out pugs in images.'}\r\n\t\t\t\t<br />\r\n\t\t\t\t{'Enter a URL to try it out!'}\r\n\t\t\t</p>\r\n\t\t\t<div className='w-100'>\r\n\t\t\t\t<div className='w-100 center carbon pa3 br3 shadow-5'>\r\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} onKeyPress={onKeyPress} />\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-gray'\r\n\t\t\t\t\t\tonClick={onButtonSubmit}\r\n\t\t\t\t\t>Sniff</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './SignIn.css';\r\n\r\nclass SignIn extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tsignInEmail: '',\r\n\t\t\tsignInPassword: '',\r\n\t\t\tsignInFailed: false\r\n\t\t}\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({signInEmail: event.target.value});\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({signInPassword: event.target.value});\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://thawing-depths-15865.herokuapp.com/signin', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.signInEmail,\r\n\t\t\t\tpassword: this.state.signInPassword\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\tconsole.log('user', user);\r\n\t\t\t\t\tthis.setState({signInFailed: false});\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({signInFailed: true});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({signInFailed: true});\r\n\t\t\t})\r\n\t}\r\n\r\n\tkeyPressed = (event) => {\r\n\t    if (event.key === \"Enter\") {\r\n\t      this.onSubmitSignIn()\r\n\t    }\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { onRouteChange } = this.props;\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-90 w-75-m w-75-l mw6 center shadow-5\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t        \tonChange={this.onEmailChange}\r\n\t\t\t\t        \tonKeyPress={this.keyPressed}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t        \tonKeyPress={this.keyPressed}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      {this.state.signInFailed \r\n\t\t\t\t      \t? <p className=\"f6 link red db\">Sign in failed. </p>\r\n\t\t\t\t      \t: ''\r\n\t\t\t\t\t   }\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      \tonClick={this.onSubmitSignIn}\r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Sign in\"\r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      <p \r\n\t\t\t\t      \tonClick={() => onRouteChange('register')} \r\n\t\t\t\t      \tclassName=\"f6 link dim black db pointer\"\r\n\t\t\t\t      \t>Register</p>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: '',\r\n\t\t\tname: '',\r\n\t\t\tregisterFailed: false\r\n\t\t}\r\n\t}\r\n\r\n\tonNameChange = (event) => {\r\n\t\tthis.setState({name: event.target.value});\r\n\t}\r\n\r\n\tonEmailChange = (event) => {\r\n\t\tthis.setState({email: event.target.value});\r\n\t}\r\n\r\n\tonPasswordChange = (event) => {\r\n\t\tthis.setState({password: event.target.value});\r\n\t}\r\n\r\n\tonSubmitSignIn = () => {\r\n\t\tfetch('https://thawing-depths-15865.herokuapp.com/register', {\r\n\t\t\tmethod: 'post',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tpassword: this.state.password,\r\n\t\t\t\tname: this.state.name\r\n\t\t\t})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(user => {\r\n\t\t\t\tif (user.id) {\r\n\t\t\t\t\tthis.setState({registerFailed: false});\r\n\t\t\t\t\tthis.props.loadUser(user);\r\n\t\t\t\t\tthis.props.onRouteChange('home');\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({registerFailed: true});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tthis.setState({registerFailed: true});\r\n\t\t\t})\r\n\t}\r\n\r\n\tkeyPressed = (event) => {\r\n\t    if (event.key === \"Enter\") {\r\n\t      this.onSubmitSignIn()\r\n\t    }\r\n\t  }\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<article className=\"br3 ba dark-gray b--black-10 mv4 w-90 w-75-m w-75-l mw6 center shadow-5\">\r\n\t\t\t\t<main className=\"pa4 black-80\">\r\n\t\t\t\t  <div className=\"measure\">\r\n\t\t\t\t    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n\t\t\t\t      <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"text\"\r\n\t\t\t\t        \tname=\"name\"  \r\n\t\t\t\t        \tid=\"name\" \r\n\t\t\t\t        \tonChange={this.onNameChange}\r\n\t\t\t\t        \tonKeyPress={this.keyPressed}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mt3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"email\" \r\n\t\t\t\t        \tname=\"email-address\"  \r\n\t\t\t\t        \tid=\"email-address\" \r\n\t\t\t\t        \tonChange={this.onEmailChange}\r\n\t\t\t\t        \tonKeyPress={this.keyPressed}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"mv3\">\r\n\t\t\t\t        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n\t\t\t\t        <input \r\n\t\t\t\t        \tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n\t\t\t\t        \ttype=\"password\" \r\n\t\t\t\t        \tname=\"password\"  \r\n\t\t\t\t        \tid=\"password\" \r\n\t\t\t\t        \tonChange={this.onPasswordChange}\r\n\t\t\t\t        \tonKeyPress={this.keyPressed}\r\n\t\t\t\t        />\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </fieldset>\r\n\t\t\t\t    <div className=\"lh-copy mt3\">\r\n\t\t\t\t      {this.state.registerFailed \r\n\t\t\t\t      \t? <p className=\"f6 link red db\">Registration failed.</p>\r\n\t\t\t\t      \t: ''\r\n\t\t\t\t\t   }\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div className=\"\">\r\n\t\t\t\t      <input \r\n\t\t\t\t      \tonClick={this.onSubmitSignIn}\r\n\t\t\t\t      \tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n\t\t\t\t      \ttype=\"submit\" \r\n\t\t\t\t      \tvalue=\"Register\"\r\n\t\t\t\t      />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</main>\r\n\t\t\t</article>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='white f3'>\r\n\t\t\t\t{`${name}, you've sniffed ${entries} images`}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst Title = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='tc f2 b'>Pug or Not Pug</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport './PugRecognition.css';\r\n\r\nconst PugRecognition = ( { imageUrl, boxes, isPug, isThinking }) => {\r\n\tlet  boxList = <div></div>;\r\n\tif (boxes.length > 0) {\r\n\t\tboxList = boxes.map((box, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={i} className='bounding-box z-1' style={{top: box.topRow, bottom: box.bottomRow, left: box.leftCol, right: box.rightCol}} ></div>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\tconst pugResult = !isThinking \r\n\t\t? (isPug \r\n\t\t\t? <p className='center b f1 green'>PUG</p> \r\n\t\t\t: <p className='center b f1 red'>NOT PUG</p>) \r\n\t\t: (<p className='center b f1 white'>Thinking...</p>);\r\n\tconst faceResult = boxes.length > 0 ? <p className='center ma'>Pro Tip: boxes indicate faces on people. People are not pugs. <br /> Now you know.</p> : <div></div>;\r\n\r\n\tif (imageUrl.length > 0)\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div id='result' className='center mv2 br3 pa2 w-100 shadow-3'>\r\n\t\t\t\t\t{ pugResult }\r\n\t\t\t\t\t{ faceResult }\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<img  alt='' id='inputimage' className='br3 shadow-3' src={imageUrl} />\r\n\t\t\t\t{ boxes.length > 0 ? boxList : <div></div> }\r\n\t\t\t</div>\r\n\t\t)\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<div></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default PugRecognition;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation.js';\nimport Logo from './components/Logo/Logo.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport SignIn from './components/SignIn/SignIn.js';\nimport Register from './components/Register/Register.js';\nimport Rank from './components/Rank/Rank.js';\nimport Title from './components/Title/Title.js';\nimport PugRecognition from './components/PugRecognition/PugRecognition.js';\nimport './App.css';\n\nconst initialState = {\n    input: '',\n    imageUrl: '',\n    boxes: {},\n    isPug: false,\n    route: 'signin',\n    isSignedIn: false,\n    isThinking: true,\n    user: {\n      id: '',\n      name: '',\n      email: '',\n      password: 'cookies',\n      entries: 0,\n      joined: ''\n    }\n  }\n\nclass App extends Component {\n  constructor () {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (response) => {\n    const clarifaiFaces = response.outputs[0].data.regions;\n    let returnBoxes = {};\n    try {\n      returnBoxes = clarifaiFaces.map(region => {\n        const clarifaiFace = region.region_info.bounding_box;\n        const image = document.getElementById('inputimage');\n        const width = Number(image.width);\n        const height = Number(image.height);\n        console.log(width, height);\n        return {\n          leftCol: clarifaiFace.left_col * width,\n          topRow: clarifaiFace.top_row * height,\n          rightCol: width - (clarifaiFace.right_col * width),\n          bottomRow: height - (clarifaiFace.bottom_row * height)\n        }\n      }) \n    } catch (err) {\n      // nothing to do \n    }\n    return returnBoxes;\n  }\n\n  displayFaceBox = (boxes) => {\n    console.log('boxes:', boxes);\n    this.setState({boxes: boxes});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  keyPressed = (event) => {\n    if (event.key === \"Enter\") {\n      this.onButtonSubmit()\n    }\n  }\n\n  onButtonSubmit = () => {\n    this.setState({isThinking: true});\n    this.setState({imageUrl: this.state.input});\n\n    // get general model data for dog/pug\n    fetch('https://thawing-depths-15865.herokuapp.com/image/pug', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response);\n        let concepts = response['outputs'][0]['data']['concepts'];\n        let results = {};\n        concepts.map(c => {\n          if (c.name === 'pug') {\n            results['pug'] = c.value;\n          }\n          else if (c.name === 'dog') {\n            results['dog'] = c.value;\n          }\n          }\n        );\n        this.setState({isPug: 'pug' in results});\n        this.setState({isThinking: false});\n        console.log('pug search results', results);\n      });\n    \n    // get facial recognition data\n    fetch('https://thawing-depths-15865.herokuapp.com/image/faces', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n          if (response) {\n            fetch('https://thawing-depths-15865.herokuapp.com/profile/update', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(console.log)\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        })\n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signin') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true});\n    }\n    this.setState({route: route});\n  }\n\n  render () {\n    const { isSignedIn, imageUrl, route, boxes, isPug, isThinking } = this.state;\n    return (\n      <div className=\"App\">\n        \n        <Particles \n            className='particles'\n            params={particleOptions} />\n        <div className='container'>\n          <Logo />\n          <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n        </div>\n        <Title />\n        { \n          route === 'home' \n          ? <div id=\"home\">\n            <Rank \n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onKeyPress={this.keyPressed}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <PugRecognition \n              isThinking={isThinking} \n              isPug={isPug} \n              boxes={boxes}\n              imageUrl={imageUrl} \n            />\n          </div>\n          : (\n            route === 'signin' \n            ? <SignIn \n                loadUser={this.loadUser}\n                onRouteChange={this.onRouteChange} \n              />\n            : <Register \n                loadUser={this.loadUser}\n                onRouteChange={this.onRouteChange} \n              />\n          )\n        \n        }\n      </div>\n    );\n  }\n}\n\nconst particleOptions = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 160,\n      \"density\": {\n        \"enable\": false\n      }\n    },\n    \"size\": {\n      \"value\": 3,\n      \"random\": true,\n      \"anim\": {\n        \"speed\": 4,\n        \"size_min\": 0.3\n      }\n    },\n    \"line_linked\": {\n      \"enable\": false\n    },\n    \"move\": {\n      \"random\": true,\n      \"speed\": 1,\n      \"direction\": \"top\",\n      \"out_mode\": \"out\"\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}